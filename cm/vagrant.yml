- hosts: all
  gather_facts: no
  tasks:
  - name: Update cache
    apt: update_cache=yes
    become: yes
  - name: Install packages
    apt: name={{item}}
    with_items:
      - postgresql
      - python-psycopg2
      - default-jre
      - default-jdk
      - maven
      - nginx
      - nodejs-legacy
      - npm
      - git
    become: yes

- hosts: all
  sudo: yes
  sudo_user: postgres
  gather_facts: no
  vars:
    dbname: addressbook
    dbuser: addressbook
    dbpassword: passwd
    port: 5433
  tasks:
  - name: Copy Prostgres config (1 / 2)
    copy: src=/vagrant/cm/postgresql_configuration/postgresql.conf dest=/etc/postgresql/9.3/main/postgresql.conf owner=postgres group=postgres
    become: yes
  - name: Copy Prostgres config (2 / 2)
    copy: src=/vagrant/cm/postgresql_configuration/pg_hba.conf dest=/etc/postgresql/9.3/main/pg_hba.conf owner=postgres group=postgres
    become: yes
  - name: Restart Postgres service
    service: name=postgresql state=restarted
  - name: Create database
    postgresql_db: name={{dbname}} port={{port}}
    become: yes
  - name: Ensure user has access to database
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL port={{port}}
#  - name: Ensure user does not have unnecessary privilege
#    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB
  - name: Set psql user as usperuser
    postgresql_user: name={{dbuser}} role_attr_flags=SUPERUSER port={{port}}
  - name: Restart Postgres service
    service: name=postgresql state=restarted
    become: yes
  - name: Init database
    shell: "psql -d {{dbname}} -a -f /vagrant/database/contact_list_db_scheme.sql"
  - name: Import test data
    shell: "psql -d {{dbname}} -a -f /vagrant/database/testdata.sql"
  - name: Import test data (contacts)
    shell: "psql -d {{dbname}} -a -f /vagrant/database/testdata_persons_and_accounts.sql"
  - name: Start Postgresql on boot
    shell: "update-rc.d postgresql defaults"
    become: yes

- hosts: all
  tasks:
  - name: Copy nginx config
    copy: src=/vagrant/cm/nginx_configuration/default dest=/etc/nginx/sites-enabled/default
    become: yes
  - name: Restart Nginx service
    service: name=nginx state=restarted
    become: yes
  - name: Add Wildfly user
    user: name=wildfly
    become: yes
  - name: Download Wildfly
    get_url: url=http://download.jboss.org/wildfly/8.2.0.Final/wildfly-8.2.0.Final.tar.gz dest=/opt/wildfly-8.2.0.Final.tar.gz
    become: yes
  - name: Extract Wildfly archive
    unarchive: src=/opt/wildfly-8.2.0.Final.tar.gz dest=/opt owner=wildfly copy=no
    become: yes
  - name: Create /opt/wildfly symlink
    file: src=/opt/wildfly-8.2.0.Final dest=/opt/wildfly owner=wildfly
     state=link
    become: yes
  - name: Configure Wildfly
    lineinfile:
      dest=/opt/wildfly/bin/init.d/wildfly.conf
      regexp='^# JBOSS_HOME'
      insertafter='^JBOSS_HOME'
      line='JBOSS_HOME="/opt/wildfly"'
    become: yes
  - name: Configure Wildfly
    lineinfile:
      dest=/opt/wildfly/bin/init.d/wildfly.conf
      regexp='^# JBOSS_USER'
      insertafter='^JBOSS_USER'
      line='JBOSS_USER=wildfly'
    become: yes
  - name: Configure Wildfly (1 / 5)
    lineinfile:
      dest=/opt/wildfly/bin/init.d/wildfly.conf
      regexp='^# JBOSS_MODE'
      insertafter='^JBOSS_MODE'
      line='JBOSS_MODE=standalone'
    become: yes
  - name: Configure Wildfly (2 / 5)
    lineinfile:
      dest=/opt/wildfly/bin/init.d/wildfly.conf
      regexp='^# JBOSS_CONFIG'
      insertafter='^JBOSS_CONFIG'
      line='JBOSS_CONFIG=standalone-full.xml'
    become: yes
  - name: Configure Wildfly (3 / 5)
    lineinfile:
      dest=/opt/wildfly/bin/init.d/wildfly.conf
      regexp='^# STARTUP_WAIT'
      insertafter='^STARTUP_WAIT'
      line='STARTUP_WAIT=120'
    become: yes
  - name: Configure Wildfly (4 / 5)
    lineinfile:
      dest=/opt/wildfly/bin/init.d/wildfly.conf
      regexp='^# SHUTDOWN_WAIT'
      insertafter='^SHUTDOWN_WAIT'
      line='SHUTDOWN_WAIT=120'
    become: yes
  - name: Configure Wildfly (5 / 5)
    lineinfile:
      dest=/opt/wildfly/bin/init.d/wildfly.conf
      regexp='^# JBOSS_CONSOLE_LOG'
      insertafter='^JBOSS_CONSOLE_LOG'
      line='JBOSS_CONSOLE_LOG="/var/log/wildfly/console.log"'
    become: yes
  - name: Create /etc/default/wildfly symlink
    file: src=/opt/wildfly/bin/init.d/wildfly.conf dest=/etc/default/wildfly  owner=wildfly state=link
    become: yes
  - name: Create /etc/init.d/wildfly symlink
    file: src=/opt/wildfly/bin/init.d/wildfly-init-debian.sh dest=/etc/init.d/wildfly owner=wildfly state=link
    become: yes
  - name: Replace all 127.0.0.1 to 0.0.0.0
    replace: dest=/opt/wildfly/standalone/configuration/standalone-full.xml regexp='127\.0\.0\.1' replace='0.0.0.0' backup=yes
    become: yes
  - name: Start Wildfly on boot
    shell: "update-rc.d wildfly defaults"
    become: yes
  - name: Copy Wildfly config (1 / 2)
    copy: src=/vagrant/cm/wildfly_standalone_configuration/ dest=/opt/wildfly/standalone/configuration/ owner=wildfly group=wildfly directory_mode=yes
    become: yes
  - name: Creates directory
    file: path=/opt/wildfly/modules/org/postgresql/main/ state=directory
    become: yes
  - name: Copy Wildfly config (2 / 2)
    copy: src=/vagrant/cm/wildfly_postgresql/ dest=/opt/wildfly/modules/org/postgresql/main/ owner=wildfly group=wildfly directory_mode=yes
    become: yes
  - name: Copy Wildfly config (debug setting)
    copy: src=/vagrant/cm/wildfly_bin_configuration/standalone.conf dest=/opt/wildfly/bin/standalone.conf owner=wildfly group=wildfly
    become: yes
  - name: Restart Wildfly service
    service: name=wildfly state=restarted
    become: yes
  - name: Build and deploy webapp
    shell: sh /vagrant/deploy.sh
    become: yes
  - name: Update npm
    npm: name=npm global=yes
    become: yes
  - name: npm install -g yo
    npm: name=yo global=yes
    become: yes
  - name: npm install -g bower
    npm: name=bower global=yes
    become: yes
  - name: npm install -g grunt-cli
    npm: name=grunt-cli global=yes
    become: yes
  - name: npm install -g generator-karma
    npm: name=generator-karma global=yes
    become: yes
  - name: npm install -g generator-angular
    npm: name=generator-angular global=yes
    become: yes
  - name: (frontend) npm install
    shell: npm install --no-bin-links chdir=/vagrant/frontend
    become: yes
  - name: (frontend) grunt
    shell: grunt --force chdir=/vagrant/frontend
    become: yes
  - name: (frontend) grunt build
    shell: grunt build --force chdir=/vagrant/frontend
    become: yes
